public class MergeArrays {
    // Function to merge Y[] into X[] maintaining sorted order
    public static void mergeArrays(int[] X, int[] Y) {
        // Find the index of the last non-zero element in X[]
        int m = X.length;
        int n = Y.length;
        int j = m - 1;
        for (int i = m - 1; i >= 0; i--) {
            if (X[i] != 0) {
                X[j] = X[i];
                j--;
            }
        }

        // Merge Y[] into X[] using merge process of merge sort
        int i = j + 1; // Initial index of merged array
        int k = 0; // Initial index of Y[]
        j = 0; // Initial index of X[]
        while (i < m && k < n) {
            if (X[i] < Y[k]) {
                X[j++] = X[i++];
            } else {
                X[j++] = Y[k++];
            }
        }

        // Copy remaining elements of Y[] if any
        while (k < n) {
            X[j++] = Y[k++];
        }
    }

    // Utility function to print an array
    public static void printArray(int[] arr) {
        for (int i : arr) {
            System.out.print(i + " ");
        }
        System.out.println();
    }

    // Driver code
    public static void main(String[] args) {
        int[] X = { 0, 2, 0, 3, 0, 5, 6, 0, 0 };
        int[] Y = { 1, 8, 9, 10, 15 };
        mergeArrays(X, Y);
        printArray(X);
    }
}
